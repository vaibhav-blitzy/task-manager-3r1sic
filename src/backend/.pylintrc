# Python version to use for version specific checks
py-version = 3.11

# Add files or directories matching the regex patterns to the ignore list
ignore=CVS,venv,.git,__pycache__,migrations,tests

# Add files or directories to the blacklist
ignore-paths=
    */tests/*,
    */migrations/*,
    */venv/*,
    */.venv/*

# Files or directories matching the regular expression patterns are skipped
ignore-patterns=^\.#

# Maximum line length for imports (to avoid breaking import statements)
init-hook='import sys; sys.path.append("src/backend")'

# Use multiple processes to speed up Pylint
jobs=4

# Control the amount of potential inferred values when inferring a single object
limit-inference-results=100

# List of plugins
load-plugins=
    pylint.extensions.docparams,
    pylint.extensions.docstyle,
    pylint.extensions.bad_builtin,
    pylint.extensions.redefined_variable_type

# Pickle collected data for later comparisons
persistent=yes

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages
suggestion-mode=yes

# Specify a score threshold to be exceeded before program exits with error
fail-under=9.0

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels
confidence=
    HIGH,
    CONTROL_FLOW,
    INFERENCE,
    INFERENCE_FAILURE,
    UNDEFINED

# Disable the message, report, category or checker with the given id(s)
disable=
    raw-checker-failed,
    bad-inline-option,
    locally-disabled,
    file-ignored,
    suppressed-message,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    too-few-public-methods,
    duplicate-code,
    fixme,
    line-too-long,
    too-many-arguments,
    too-many-locals,
    too-many-branches,
    too-many-statements,
    bad-continuation

# Enable specific messages/categories that are disabled by default
enable=
    c-extension-no-member

[REPORTS]
# Set the output format
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a score less than or equal to 10
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Activate the evaluation score
score=yes

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete name of functions that never returns
never-returning-functions=sys.exit,argparse.parse_error

[BASIC]
# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Bad variable names which should always be refused
bad-names=
    foo,
    bar,
    baz,
    toto,
    tutu,
    tata

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Good variable names which should always be accepted
good-names=
    i,
    j,
    k,
    ex,
    Run,
    _,
    id,
    db,
    logger

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match function or class names that do
# not require a docstring
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings
docstring-min-length=10

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Allow the body of a class to be on the same line as the declaration if body
# contains single statement
single-line-class-stmt=no

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit (2 spaces, 4 spaces, tabs)
indent-string='    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren=4

# Expected format of line ending (unix or windows)
expected-line-ending-format=unix

[LOGGING]
# Format style used to check logging format string
logging-format-style=old

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=8

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

[SPELLING]
# Limits count of emitted suggestions for spelling mistakes
max-spelling-suggestions=4

# Spelling dictionary name
spelling-dict=en_US

# List of comma separated words that should not be checked
spelling-ignore-words=

# A path to a file that contains the private dictionary
spelling-private-dict-file=

# Tells whether to store unknown words to the private dictionary
spelling-store-unknown-words=no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference system
generated-members=

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None
ignore-none=yes

# List of class names for which member attributes should not be checked
ignored-classes=
    optparse.Values,
    thread._local,
    _thread._local,
    argparse.Namespace

# List of module names for which member attributes should not be checked
ignored-modules=

# Show a hint with possible names when a member name was not found
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a similar match for a
# missing member name
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when
# showing a hint for a missing member
missing-member-max-choices=1

[VARIABLES]
# List of additional names supposed to be defined in builtins
additional-builtins=

# Tells whether unused global variables should be treated as a violation
allow-global-unused-variables=yes

# List of strings which can identify a callback function by name
callbacks=
    cb_,
    _cb

# Case of variable names
#const-naming-style=UPPER_CASE
#function-naming-style=snake_case
#method-naming-style=snake_case
#module-naming-style=snake_case
#variable-naming-style=snake_case
#class-naming-style=PascalCase

# A regular expression matching the name of dummy variables (i.e. expected to not be used)
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored
ignored-argument-names=_.*|^ignored_|^unused_

# List of qualified module names which can have objects that can redefine
# builtins
redefining-builtins-modules=
    six.moves,
    past.builtins,
    future.builtins,
    builtins,
    io

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=
    __init__,
    __new__,
    setUp,
    __post_init__

# List of member names, which should be excluded from the protected access
# warning
exclude-protected=
    _asdict,
    _fields,
    _replace,
    _source,
    _make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=cls

[DESIGN]
# Maximum number of arguments for function / method
max-args=8

# Maximum number of attributes for a class (see R0902)
max-attributes=12

# Maximum number of boolean expressions in an if statement (see R0916)
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of parents for a class (see R0901)
max-parents=7

# Maximum number of public methods for a class (see R0904)
max-public-methods=20

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of statements in function / method body
max-statements=50

# Minimum number of public methods for a class (see R0903)
min-public-methods=1

[IMPORTS]
# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

# Analyse import fallback blocks. This can be used to support both Python 2 and 3
# compatible code, which means that the block might have code that exists only in
# one or another interpreter, leading to false positives when analysed
analyse-fallback-blocks=no

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=
    StringIO,
    optparse,
    regsub,
    TERMIOS,
    Bastion,
    rexec

# Force import order to recognize a module as part of a third party library
known-third-party=
    enchant,
    flask,
    pytest,
    sqlalchemy,
    flask_restful,
    flask_sqlalchemy,
    flask_migrate,
    flask_jwt_extended

# Couples of modules and preferred modules
preferred-modules=

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught. Defaults to
# "BaseException, Exception"
overgeneral-exceptions=
    BaseException,
    Exception,
    StandardError